; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
# use esp-idf default "main" directory instead of "src" with PlatformIO
src_dir = main

[env]
platform = espressif32
# our v1 board
# board = esp32doit-devkit-v1
# our v2 board
board = esp32-s3-devkitc-1
framework = espidf
monitor_speed = 115200
# board_build.flash_size = 8MB
# For ESP32-S3 with native USB, these settings help ensure the monitor
# connects correctly after an upload or reset by preventing an auto-reset.
monitor_dtr = 0
monitor_rts = 0

board_build.espidf_project = true
board_build.embed_files = main/server_cert.pem
board_build.sdkconfig_defaults = sdkconfig.defaults

lib_extra_dirs = components
build_unflags = -Werror
build_type = debug

# A single, dynamic environment for all sensors
# It uses the python script to load the correct configuration (and credentials) at build time.
[env:dynamic_sensor]
extends = env
# pre: means to run the script at the beginning of the build process
extra_scripts = pre:dynamic_envs.py

# =================================================
# ===== Unit Testing Environment ==================
# =================================================
[env:test]
extends = env
lib_deps = throwtheswitch/Unity
test_build_src = true
build_type = test
build_flags =
; Explicitly define PIO_UNIT_TESTING to ensure main.c is excluded
    -DPIO_UNIT_TESTING
; Define Kconfig values required by the code under test
    -DCONFIG_API_URL='"http://test.api"'
    -DCONFIG_SENSOR_SET='"test_set"'
    -DCONFIG_SENSOR_ID='"test-sensor-id"'
    -DCONFIG_BEARER_TOKEN='"test-bearer-token"'
    -DCONFIG_WIFI_CREDENTIALS='"ssid:password"'
; Linker flags to wrap (mock) functions we still need
    -Wl,--wrap=time
    -Wl,--wrap=strftime
    -Wl,--wrap=gmtime
    -Wl,--wrap=esp_log_write