"""
get_git_info.py

A pre-build script for PlatformIO to fetch the current Git commit SHA and
timestamp and write them to a C header file for firmware inclusion.

Copyright (c) 2025 Caden Howell (cadenhowell@gmail.com)
Developed with assistance from Gemini Code Assist (2025).
Apache 2.0 Licensed as described in the file LICENSE
"""
import os
import subprocess

# Import the 'env' environment from the PlatformIO script context
Import("env")

# --- Git Commands ---
# Get the short hash of the latest commit
sha_cmd = "git rev-parse --short HEAD"
# Get the UNIX timestamp of the latest commit
timestamp_cmd = "git log -1 --format=%ct"

# --- Output File ---
# The header file that will be generated in the 'main' directory.
# Use env.subst() to correctly get the project's source directory path.
output_file = os.path.join(env.subst("$PROJECT_SRC_DIR"), "git_version.h")

try:
    # Run the Git commands to get the values
    commit_sha = subprocess.check_output(sha_cmd, shell=True, text=True).strip()
    commit_timestamp = subprocess.check_output(timestamp_cmd, shell=True, text=True).strip()

    print(f"Git Info: SHA={commit_sha}, Timestamp={commit_timestamp}")

    # --- Generate the Header File ---
    header_content = f"""
// This file is automatically generated by get_git_info.py. Do not edit.
#pragma once

#define GIT_COMMIT_SHA "{commit_sha}"
#define GIT_COMMIT_TIMESTAMP "{commit_timestamp}"
"""

    # Write the content to the output file
    with open(output_file, "w") as f:
        f.write(header_content.strip())

    print(f"Successfully generated git version header at: {output_file}")

except Exception as e:
    print(f"Error getting Git info: {e}")
    print("Using default/empty values for Git version.")

    # In case of an error (e.g., not in a Git repo), create a default header
    header_content = """
// This file is automatically generated. Could not get Git info.
#pragma once

#define GIT_COMMIT_SHA "unknown"
#define GIT_COMMIT_TIMESTAMP "0"
"""
    with open(output_file, "w") as f:
        f.write(header_content.strip())